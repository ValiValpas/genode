#!/usr/bin/make -f
#
# \brief       Build qemu for Xilinx devices
# \author      Johannes Schlatow
# \contributor Norman Feske (tool_chain script)
# \date        2014-08-07
#

help:
	$(ECHO)
	$(ECHO) "Build qemu with Xilinx patches to support microblaze and zynq"
	$(ECHO)
	$(ECHO) "--- available commands ---"
	$(ECHO) "all        - build"
	$(ECHO) "clean      - clean everything except downloaded archives"
	$(ECHO) "cleanall   - clean everything including downloaded archives"
	$(ECHO) "install    - copy qemu to '$(INSTALL_LOCATION)'"
	$(ECHO)

#
# Enable parallel build for 2nd-level $(MAKE) by default
#

MAKE_OPT ?= -j4

#
# Determine Genode base directory based on the known location of the
# 'create_builddir' tool within the Genode source tree
#

GENODE_DIR ?= $(realpath $(dir $(firstword $(MAKEFILE_LIST)))/..)

#
# Download locations
#

QEMU_GIT_URL = https://github.com/Xilinx/qemu

#
# Tool versions and install location
#

QEMU_VERSION      = xilinx
INSTALL_LOCATION  = /opt/qemu-xilinx/
DOWNLOAD_DIR      = download
CONTRIB_DIR       = contrib

#
# Utilities
#

##
# Return $(2) if $(1) is empty, "" else
#
check_nonempty_f = $(if $(1),,$(info $(2))$(2))

##
# Return $(3) if $(1) != $(2), "" else
#
check_equal_f = $(if $(filter $(1),$(2)),,$(info $(3))$(3))


SHELL       = bash
BRIGHT_COL  = \033[01;33m
DEFAULT_COL = \033[0m
ECHO        = @echo -e
VERBOSE     = @

#
# Check if 'wget' is installed
#
GIT_OK = $(call check_nonempty_f,$(shell which git),\
            Need to have 'git' installed.)

TOOLS_OK = $(GIT_OK)

ifneq ($(strip $(TOOLS_OK)),)
$(error Please install missing tools.)
endif

#
# 'configure' parameters
#

LOCAL_INSTALL_LOCATION = $(shell pwd)/build/install-qemu-xilinx

ifneq ($(VERBOSE),)
CONFIG_QUIET = 
MAKEFLAGS   += --quiet
export MAKEFLAGS
endif

QEMU_CONFIG = $(CONFIG_QUIET) \
              --prefix=$(LOCAL_INSTALL_LOCATION) \
              --target-list="arm-softmmu,microblazeel-softmmu" \
				  --enable-fdt \
				  --disable-kvm

#
# Build rules and dependencies between build steps
#

QEMU_BINARIES           = build/qemu-$(QEMU_VERSION)/arm-softmmu/qemu-system-arm
QEMU_INSTALLED_BINARIES = $(LOCAL_INSTALL_LOCATION)/bin/qemu-system-arm

all: $(QEMU_INSTALLED_BINARIES)

$(DOWNLOAD_DIR):
	$(VERBOSE)mkdir -p $@

$(CONTRIB_DIR)/qemu-$(QEMU_VERSION):
	$(ECHO) "$(BRIGHT_COL)cloning out qemu repository...$(DEFAULT_COL)"
	$(VERBOSE)mkdir -p $(CONTRIB_DIR)
	$(VERBOSE)git clone $(QEMU_GIT_URL) $@

#$(CONTRIB_DIR)/qemu-$(QEMU_VERSION)/submodules: $(CONTRIB_DIR)/qemu-$(QEMU_VERSION)
#	$(ECHO) "$(BRIGHT_COL)initializing submodules...$(DEFAULT_COL)"
#	$(VERBOSE)cd $(CONTRIB_DIR)/qemu-$(QEMU_VERSION); git submodule update --init dtc

QEMU_PATCHES_DIR = $(GENODE_DIR)/tool/patches/qemu-$(QEMU_VERSION)
QEMU_PATCHES = $(shell cat $(QEMU_PATCHES_DIR)/series)

$(CONTRIB_DIR)/qemu-$(QEMU_VERSION)/configure:: $(CONTRIB_DIR)/qemu-$(QEMU_VERSION)
	$(ECHO) "$(BRIGHT_COL)patching qemu build system...$(DEFAULT_COL)"
	$(VERBOSE)for p in $(QEMU_PATCHES); do \
	            patch -d $(CONTRIB_DIR)/qemu-$(QEMU_VERSION) -p1 -i $(QEMU_PATCHES_DIR)/$$p; done;
	$(VERBOSE)touch $@

build/qemu-$(QEMU_VERSION)/Makefile: $(CONTRIB_DIR)/qemu-$(QEMU_VERSION)/configure
	$(ECHO) "$(BRIGHT_COL)configuring qemu...$(DEFAULT_COL)"
	$(VERBOSE)mkdir -p $(dir $@)
	$(VERBOSE)cd $(dir $@); ../../$(CONTRIB_DIR)/qemu-$(QEMU_VERSION)/configure $(QEMU_CONFIG)

$(QEMU_BINARIES): build/qemu-$(QEMU_VERSION)/Makefile
	$(ECHO) "$(BRIGHT_COL)builing qemu...$(DEFAULT_COL)"
	$(VERBOSE)$(MAKE) -C $(dir $<) $(MAKE_OPT)

$(QEMU_INSTALLED_BINARIES): $(QEMU_BINARIES)
	$(ECHO) "$(BRIGHT_COL)installing qemu...$(DEFAULT_COL)"
	$(VERBOSE)$(MAKE) -C build/qemu-$(QEMU_VERSION) install

#
# Clean rules
#

clean:
	rm -rf build/qemu-$(QEMU_VERSION)

cleanall: clean
	rm -rf $(CONTRIB_DIR)/qemu-$(QEMU_VERSION)

#
# Install rules
#

install: all
	$(ECHO) "$(BRIGHT_COL)installing qemu to '$(INSTALL_LOCATION)'...$(DEFAULT_COL)"
	$(VERBOSE)sudo cp -a --remove-destination --no-target-directory $(LOCAL_INSTALL_LOCATION) $(INSTALL_LOCATION)

