

              ===============================================
              Release notes for the Genode OS Framework 21.05
              ===============================================

                               Genode Labs



; intro -> @nfeske


Webcam support
##############

; @alex-ab, @ssumpf, @cnuke

commit 7b90f8f857670b01a07962938bf735f8561b6ead
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Thu Apr 22 14:45:12 2021 +0200

    libports: add libyuv support
    
    Issue #4078

commit aa04c8e0c9136046947ae0c555e0251c1dbf6917
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Mon May 10 11:02:16 2021 +0200

    libyuv: enable MJPEG support
    
    issue #4158


commit b2792a8c276bc59d9ee5b2c8752764da139b35af
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Tue Jan 26 11:19:30 2021 +0100

    libports: update jpeg library to v9d
    
    issue #4158

commit 50d0df501acc5fed6f3f88cc38c0ca8d552c9763
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed May 5 14:28:35 2021 +0200

    libusb: Make USB library more robust
    
    - Add reference count for open/close
    - Add cancel transfer support
    - Handle packet stream correctly
    
    issue #4158

commit 573b75a5307d7b811475e9232ae09969f7183794
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue May 18 12:34:35 2021 +0200

    libports: port of libuvc
    
    by Josef Soentgen
    
    issue #4158

commit 7b90f8f857670b01a07962938bf735f8561b6ead
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Thu Apr 22 14:45:12 2021 +0200

    libports: add libyuv support
    
    Issue #4078

commit aa04c8e0c9136046947ae0c555e0251c1dbf6917
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Mon May 10 11:02:16 2021 +0200

    libyuv: enable MJPEG support
    
    issue #4158


commit b2792a8c276bc59d9ee5b2c8752764da139b35af
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Tue Jan 26 11:19:30 2021 +0100

    libports: update jpeg library to v9d
    
    issue #4158

commit 50d0df501acc5fed6f3f88cc38c0ca8d552c9763
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed May 5 14:28:35 2021 +0200

    libusb: Make USB library more robust
    
    - Add reference count for open/close
    - Add cancel transfer support
    - Handle packet stream correctly
    
    issue #4158

commit 573b75a5307d7b811475e9232ae09969f7183794
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue May 18 12:34:35 2021 +0200

    libports: port of libuvc
    
    by Josef Soentgen
    
    issue #4158


commit 58db8c647af10ba7bdaf429119f3a67fe0686334
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Tue Mar 16 09:44:23 2021 +0100

    qemu-usb: add usb webcam model
    
    Fixes #4078

commit 910ea164055d2c7068487f1a4a499330661e308a
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Mon May 3 11:37:34 2021 +0200

    qemu-usb: restrict build to x86
    
    Issue #4078
commit 58db8c647af10ba7bdaf429119f3a67fe0686334
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Tue Mar 16 09:44:23 2021 +0100

    qemu-usb: add usb webcam model
    
    Fixes #4078

commit 910ea164055d2c7068487f1a4a499330661e308a
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Mon May 3 11:37:34 2021 +0200

    qemu-usb: restrict build to x86
    
    Issue #4078

commit 146599067085f98e5d8137c38a0ff4d71bab4261
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue May 18 12:52:09 2021 +0200

    usb_webcam: An app using libuvc for USB webcams
    
    issue #4158

commit f182f6a4fe76ee7b1e5685cedce7a3ff96aeaba9
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Thu May 20 20:03:52 2021 +0200

    fixup "usb_webcam: An app using libuvc for USB webcams" (skip incomplete frames)
    
    During startup frames might be incomplete which is not covered in the
    YUV case and may lead to a page fault. Therefore, copy complete frames
    only.
    
    issue #4158

commit db9b02100efd797eeb83e8e23a910a9d9531681a
Author: Alexander Boettcher <alexander.boettcher@genode-labs.com>
Date:   Fri May 21 14:41:38 2021 +0200

    qemu-usb/webcam: signal capturing off earlier
    
    based on comment in Linux sources. Reduce fallback off-capturing detection
    to 1s.
    
    Issue #4078


Performance optimizations
#########################

; @nfeske

commit ed9487b45200541cf9614fd96c9ea9d925cdc6fb
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Tue Apr 6 14:26:10 2021 +0200

    rtc_drv: defer init until first use
    
    This patch avoids the RTC driver's aggressive polling during the
    (CPU-bounded) boot of Sculpt OS. As the RTC is not needed during bootup,
    this patch reduces the boot time (on Qemu) by 2-4 seconds.
    
    Fixes #4065

commit ac07f9d08ea0bc377329968a7e168d17bbf108bb
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Mon Apr 5 19:41:03 2021 +0200

    sculpt: skip GUI handling until framebuffer is up
    
    This avoids unneeded activity of the Leitzentrale GUI (e.g., the
    decorator) at the early boot phase of Sculpt.

commit 99f4b3cd07e882c9d7f6e413d1631387e1de89c5
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Sat Apr 3 17:42:38 2021 +0200

    Debug macros for easy performance profiling
    
    The debug macros 'GENODE_LOG_TSC' and 'GENODE_LOG_TSC_NAMED' allow for
    the easy gathering of the TSC ticks consumed by the calling scope.
    
    Fixes #4066

commit b661459aca6d7e01b06a1ac0f81d3f92dded0ffa
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Thu Apr 1 18:05:23 2021 +0200

    sandbox/init: parse config using 'List_model'
    
    This commit replaces the hand-crafted config processing by the use of
    the 'List_model' utility. This has the following advantages:
    
    - The parsing follows a common formalism that makes the code
      easier to maintain and to understand. Several parts of the code
      had to be changed (for the better) to make it fit the list model
      approach. E.g., the child states have become more expressive
      and logical.
    
    - In the common case, the XML data is traversed only once, which
      increases the parsing speed in dynamic scenarios.
    
    - The code becomes easier to optimize. In particular, the patch skips
      the re-evaluation of the session routing if no service is affected
      by the config change.
    
    The patch also revisits the init test by removing overly long sleep
    phases and extending a few sleep phases that were too short when
    executing the test on Qemu.
    
    Issue #4068

commit f5f5b8c1f14c138defa3fa210c6fd33dd3bebbe0
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Mon Apr 5 18:46:51 2021 +0200

    sandbox/init: route model
    
    This commit optimizes the 'Child::resolve_session_request'
    implementation by introducing an internal 'Route_model' for quickly
    traversing routing rules instead of parsing XML on each session request.
    
    Fixes #4068


Base framework and OS-level infrastructure
##########################################

Updated Genode Foundations book
===============================

; @nfeske

API refinements
===============

VFS-access utilities
--------------------

; @nfeske

commit 5e6316ad1b2717f213cc508e9819d7cb90427677
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Tue May 18 16:11:00 2021 +0200

    os/vfs.h: Directory::create_sub_directory
    
    This method can be used to create a directory hierarchy within a
    'Directory'.
    
    Issue #4032

commit ddb118b092b4866b4f2d6c0eab98c075c63bc637
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Tue May 18 12:16:44 2021 +0200

    os/vfs.h: New_file utility
    
    This patch moves the utility from the app/text_area to os/vfs.h to make
    it easier to use by other components. By hosting the 'New_file' as a
    friend alongside the 'Directory', we can now pass a 'Directory' as
    constructor argument, which is consistent with other utilities such as
    'File_content'.
    
    As a further improvement, the new version supports the implicit creation
    of the directory hierarchy leading to the new file.
    
    Issue #4032


Safeguarded arrays
------------------

commit e93bc9b37e51de1d8ed8bf0b9273b289a0ace01e
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Fri May 21 15:59:15 2021 +0200

    base: introduce array utility
    
    Fixes #4170


Cosmetic changes
----------------

commit f925fef17b7b805d7aa933124f509614f4ba9755
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Tue Apr 6 16:20:01 2021 +0200

    base: Refine Range_allocator::alloc_aligned
    
    This patch changes the 'alloc_aligned' interface as follows:
    
    - The former 'from' and 'to' arguments are replaced by a single
      'range' argument.
    
    - The distinction of the use cases of regular allocations vs.
      address-constrained allocations is now overed by a dedicated
      overload instead of relying on a default argument.
    
    - The 'align' argument has been changed from 'int' to 'unsigned'
      to be better compatible with 'addr_t' and 'size_t'.
    
    Fixes #4067

commit 468e7a825c8dad17338840f4a206fc3a17a40cae
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Wed Apr 7 19:13:32 2021 +0200

    base/cache.h: rename Cache_attribute to Cache
    
    The short name is better because the type will become prominently
    visible at the API.
    
    Issue #2243


Input-event handling
====================

; @jschlatow

commit e86387d5571ff5a272f5e397a4714a54091c581f
Author: Johannes Schlatow <johannes.schlatow@genode-labs.com>
Date:   Thu Apr 8 16:37:44 2021 +0200

    event_filter: allow remapping of KEY_UNKNOWN
    
    KEY_UNKNOWN is a collective symbols for all unknown keycodes.
    Remapping thus requires iterating through all corresponding codes
    instead of only applying the policy to the first match.
    
    Issue genodelabs#4069

commit c802de2cf99a3a0aced705b544a8f3038e69f657
Author: Johannes Schlatow <johannes.schlatow@genode-labs.com>
Date:   Thu Apr 8 16:37:32 2021 +0200

    event_filter: add <ignore-key> node
    
    Fixes genodelabs#4069

commit d80b2a150a4448ad5693a49c8130ab0337be18de
Author: Johannes Schlatow <johannes.schlatow@genode-labs.com>
Date:   Mon Apr 26 17:02:07 2021 +0200

    event_filter: add <log> node
    
    genodelabs/genode#4069


File-system helpers
===================

; @nfeske

commit e9ac14ed491535b6e621a01b97ef8f31be8aaffe
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Fri Mar 19 13:56:51 2021 +0100

    fs_query: report dir content in alphabetic order
    
    By sorting the reported output, all consumers of the reports become able
    to rely on a deterministic order. For example, the file browser of
    Sculpt OS, the launcher menu items, and the depot-selection items will
    appear in a predictable order.
    
    Fixes #4054

commit f33a5e14523e88e286eb944fdf59975f449a1111
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Sat Apr 24 10:48:36 2021 +0200

    fs_query: support querying file sizes
    
    By adding an attribute 'size="yes"' to a query, one instructs fs_query to
    report also the size of each queried file as attribute 'size' of the
    corresponding 'file' node.
    
    Ref #4032


commit b29f1497bf2d23bfd2fdc26c32162b8e2e395f70
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Sat Mar 20 18:31:01 2021 +0100

    depot_query: sort depot-user scan results
    
    Related to issue #4054

commit 42b269030e96d5854e286fbb0f134e651f287f64
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Sat Mar 13 22:07:01 2021 +0100

    fs_tool: add <new-file> operation
    
    Adds the <new-file> operation to the fs_tool. When configured, the
    <new-file path="...">...</new-file> tag will cause creation or overwriting of
    the file given through the 'path' attribute. The file will contain the text
    content of the tag.
    
    Ref #4032


Libraries and applications
##########################

File fault based on the CBE block encrypter
===========================================

; @m-stein



VirtualBox
==========

; @chelmuth

commit c67e78a7f0f2e0419415231cb96acb1d186e264c
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Thu Mar 11 17:50:38 2021 +0100

    vbox6: update to version 6.1.18
    
    Issue #4031

commit 839183d2b6596604ca1fbe2dfbcd1962e9c5616c
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Tue Mar 9 14:32:44 2021 +0100

    vbox6: unify EMT and vCPU entrypoint
    
    Issue #4031

commit 1a57a5a959011058521a3f525f92778466a35d23
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Tue Mar 23 16:22:37 2021 +0100

    vbox6: refactor vcpu implementation
    
    Also add recent SVM changes from vbox5.
    
    Issue #4031

commit 9ac23a18d42eaab8db96dcebe61694d474d7c745
Author: Christian Helmuth <christian.helmuth@genode-labs.com>
Date:   Wed Mar 31 11:26:59 2021 +0200

    vbox6: synchronize guest-memory handling

commit bf3ad3baff5eaaf01d954096bd7f1db9520f69a5
Author: Johannes Schlatow <johannes.schlatow@genode-labs.com>
Date:   Thu Apr 29 16:04:19 2021 +0200

    vbox5/6: pass extra mouse buttons to VM
    
    Fixes #4120


Device drivers
##############

Platform driver on ARM
======================

; @nfeske, @skalk

commit dc8c899c1dc4d613eaaab095313aaf3ab2264773
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Wed Apr 14 17:19:37 2021 +0200

    Streamline platform-device API on ARM
    
    This API rework eases the access to memory-mapped I/O registers and
    interrupts when using the platform driver. It introduces the notions of
    
    - Platform::Device       - one device obtained from a platform session
    - Platform::Device::Mmio - locally-mapped MMIO registers of a device
    - Platform::Device::Irq  - interface for receiving device interrupts
    
    The patch touches several drivers. Some drivers would require a
    significant structural change to adopt the new API (e.g., net/virtio,
    dde_linux drivers, imx gpio). In these cases, the patch adds
    compatibility shims meant to be temporary. In other cases (e.g., imx
    i2c), the adaptation was simple enough to carry through.
    
    Fixes #4075

commit 421d2bed4032a45d68f388ceb07e3bb243465559
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Fri Apr 16 15:08:21 2021 +0200

    platform driver: make device info XML optional
    
    * The device XML information dataspace is only provided,
      when the client's policy states `info="yes"`
    * The device XM information gets changed to include the
      physical resource names (I/O memory and IRQ addresses)
      instead of virtual ids and page offset
    
    Fix #4077

commit fb3923ec849d8e8d9ca1a90d38577cc13eb442a6
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Mon May 17 15:43:30 2021 +0200

    os: add Platform::Device::sigh_omit_initial_signal
    
    Add possibility to register an interrupt handler without triggering
    an initial spurious interrupt for ported device driver code.
    
    Fixes #4154


Changes specific to i.MX8
-------------------------

commit 3fccc7e3d6cf269ea841b731f6fd5c876ebefa74
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Mon May 17 15:58:53 2021 +0200

    imx8mq_platform_drv: enable root clock div setting
    
    Fixes #4155

commit f0d608dd26274cb6b08d445e4d175f6d34656658
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Tue May 25 14:19:37 2021 +0200

    imx8mq_platform_drv: introduce reset domains
    
    A reset domain can consist of one or several reset-pins
    denoted by name that are assigned to a device.
    When the device gets acquired via the Platform RPC API,
    the pins are de-asserted, and asserted again when the
    device gets released.
    
    A configuration looks like the following:
    
      <device name="mipi_dsi>
        <reset-domain name="mipi_dsi_pclk"/>
        ...
      </device>
    
    Fixes #4171


I2C driver for i.MX8
====================

; @skalk

; thanks to Jean-Adrien Domage of gapfruit

commit 32169cd137a7762713d49232f294c3f95d39256d
Author: Jean-Adrien DOMAGE <jean-adrien.domage@gapfruit.com>
Date:   Mon Feb 22 14:38:31 2021 +0100

    add I2c driver for imx8q based platform
    
    This commit introduces a new i2c driver for the imx8q_evk based platform.
    
    Fixes #4052

commit fb87cfd0167edb300bae8dce865b1b636f035083
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Fri May 21 16:08:17 2021 +0200

    i2c: extend API to support transactions
    
    Introduces the notion of a transaction that consists of one or more
    messages. Whereby a message has a read or write direction and consists
    of one or more bytes.
    
    Issue #4170
    Fixes #4169


USB
===

; @ssumpf

commit e1bb0e8e150d1ff6597ddde5cf49bb1e65ffda92
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Tue Mar 2 14:50:10 2021 +0100

    usb_host: refine class heuristics on device report
    
    This patch is an interim fix for using HID devices that offer a HID
    interface as not the first interface. It also supplements the
    interface classes as supplemental information to the USB-devices
    report.
    
    Fixes #4035

commit 0cfafa1c8f75d986a3c0138f07f7a91d648ccd3e
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Mon Mar 15 14:54:47 2021 +0100

    usb_host_drv: support command timeouts and bool properties
    
    Fixes #4047

commit d0f084d4491218092134bfb6bdd6b0918ffa17aa
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Thu Apr 29 13:13:00 2021 +0200

    usb_host: backport xhci bounce-buffer fix
    
    This commit backports the Linux upstream commit (d4a6106) [*]
    that introduces a check to prevent the sglist from being used
    unconditionally.
    
    [*] 'xhci: fix bounce buffer usage for non-sg list case'
    
    Fixes #4116.

commit 0f0edc0134d71b0f30abc11bcb1615f7e7feabd3
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Thu Apr 29 13:30:51 2021 +0200

    usb_host: implement sg_pcopy_* as TRACE dummies
    
    The former implementation called 'TRACE_AND_STOP' which led to the
    'usb_host_drv' to stop whenever such a function was called. Rather
    than stopping return '0' and let the contrib code deal with this
    situation.
    
    Issue #4116.

commit d0f084d4491218092134bfb6bdd6b0918ffa17aa
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Thu Apr 29 13:13:00 2021 +0200

    usb_host: backport xhci bounce-buffer fix
    
    This commit backports the Linux upstream commit (d4a6106) [*]
    that introduces a check to prevent the sglist from being used
    unconditionally.
    
    [*] 'xhci: fix bounce buffer usage for non-sg list case'
    
    Fixes #4116.

commit 0f0edc0134d71b0f30abc11bcb1615f7e7feabd3
Author: Josef Söntgen <josef.soentgen@genode-labs.com>
Date:   Thu Apr 29 13:30:51 2021 +0200

    usb_host: implement sg_pcopy_* as TRACE dummies
    
    The former implementation called 'TRACE_AND_STOP' which led to the
    'usb_host_drv' to stop whenever such a function was called. Rather
    than stopping return '0' and let the contrib code deal with this
    situation.
    
    Issue #4116.

commit 60521c30bc282541223cc6e9583ffdcc6c0b16cd
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Sun May 9 05:04:04 2021 +0200

    usb_host: Move task to device in USB session
    
    A Lx::Task is now associated to a USB device not the session any more.
    This implies that a task lives as long as the device making it possible
    to gracefully handle outstanding requests (i.e., synchronous) in case
    the session has been closed.
    
    issue #4149

commit 8d118ad46dd023236e86d6a31e418689b8329137
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Wed May 12 15:02:03 2021 +0200

    fixup: 'usb_host: Move task to device in USB session'
    
    Remove `_udev_` check.
    
    issue #4149

commit bf2c8b57106db807b1d15f2a3f024472394050e7
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Tue May 11 14:16:52 2021 +0200

    usb_host: improve isochronous performance on Intel
    
    This patch takes advantage of block transfer interrupts on Intel XHCI
    controllers which is used during isochronous transfers. Because of a bug
    in hardware (see usb_host_isoc_bei.patch header), this feature has been
    disabled for Intel leading to up to 8000 interrupts/s for isochronous
    transfer causing severe CPU consumption on Genode. With this commit we
    lower host driver consumption to normal levels.
    
    issue #4149

commit 8dad06860460e7f6c860c772f4e1a62d8d9f4a59
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Thu May 20 18:40:59 2021 +0200

    usb_host: make device creation/destruction robust
    
    - Signal device ready depending on state (ready or not) immediately or
      when "actconfig" is set
    - Report new devices when ready
    - Drain packet stream in case there is no device present (needed for
      synchronous operations at client side)
    - Do not use 'session_device' on device destruction, check pointer
      directly instead
    
    issue #4149

commit ac83e820666df35f97eba57ffcdb866a46dc3dd4
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Thu May 20 18:57:58 2021 +0200

    usb_hid: perform device destruction on unplug signal only
    
    - Do not perform desctruction on report updatea in EP because
      'unregister_device' may block on Led state 'update' (synchronous
      control message) leading to the driver being stuck because no more
      signals are received
    - Check if device is present in 'submit_urb' calls
    
    fixes #4166


Platforms
#########

Genode/Linux on 64-bit ARM
==========================

; @nfeske

commit d477062c56b92e4323a2d923efe56237e9ddda65
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Tue May 4 12:13:46 2021 +0200

    base-linux: simplify clone syscall binding
    
    This patch simplifies the use of the clone system call for creating
    processes and threads. Until now, the binding used an opaque pointer
    argument to pass context information to the newly created process or
    thread. However, upon close inspection, this is not a strict
    requirement.
    
    A newly created thread accesses its contextual information by
    using its stack pointer as key. The pointer argument is not used.
    
    The creation of processes is strictly serialized because the
    intermediate stack used in-between clone and execve is a global
    variable. Since we rely on the serialization anyway, we can pass the
    context information of a new process via a global variable as well.
    
    This change simplifies the syscall binding for the upcoming AARCH64
    support, which would otherwise require us to deal with the notion
    of TLS on Linux.
    
    Issue #4136

commit fdb1a4dd886a25eb6ca792220182fad489a4b8cd
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Tue May 4 12:18:48 2021 +0200

    base-linux: avoid legacy syscalls
    
    Until now, Genode's Linux system call bindings were based on original
    Unix system calls that were later superseded by more flexibile variants.
    E.g., 'openat' is a modern version of 'open'. Even though Linux upholds
    the compatiblity with the original versions for existing architectures
    like x86, the legacy syscalls are absent for the recently added AARCH64
    architecture. A good overview of the system calls accross the prominent
    architectures can be found at
    
    https://chromium.googlesource.com/chromiumos/docs/+/master/constants/syscalls.md
    
    This patch updates Genode's syscall bindings to avoid legacy versions,
    thereby easing the support for AARCH64. The used "modern" versions
    were introduced back in Linux version 2 days. So we are fine to rely
    on them.
    
    The patch slightly changes the signature for lx_stat because this system
    call is merely used to check for the existance of a file and its size.
    The new name 'lx_stat_size' draws a closer connection to its use case.
    That said, the stat syscall has not been updated to the modern statx
    since statx is still a fairly recent addition.
    
    Issue #4136

commit 2f9d430c00180f7616f82e5f0c8182e6f1170a64
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Wed May 5 19:20:37 2021 +0200

    base-linux: 64-bit ARM support
    
    This patch adds support for running Genode/Linux on the AARCH64
    architecture.
    
    - The kernel-agnostic startup code (crt0) had to be extended to
      capture the initial stack pointer, which the Linux kernel uses
      to pass the process environment. This is in line with the
      existing startup code for x86_32 and x86_64.
    
    - The link order of the host libraries linked to lx_hybrid
      programs had to be adjusted such that libgcc appears at last
      because the other libraries depend on symbols provided by
      libgcc.
    
    - When using AARCH64 Linux as host, one can execute run scripts
      via 'make run/<script> KERNEL=linux BOARD=linux' now.
    
    Issue #4136

commit a4115cfea9b70bcba9a339cd5911f309510b649c
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Sun May 2 11:53:34 2021 +0200

    base-linux: discharge timestamp on AARCH64
    
    The kernel-agnostic 'Trace::timestamp' function for arm_64 executes the
    'mrs %0, pmccntr_el0' instruction, which is not permitted for user-level
    programs on Linux. This patch shadows the generic timestamp.h header
    with dummy that returns zero. This return value prompts the timeout
    framework to disable the interpolation of time based on timestamps. This
    avoid the illegal-instruction abort but comes with two llimitations:
    
    First, time measurements are effectlively limited to a granulariry of 1
    millisecond (deliberately constrained by the timer driver).
    
    The quirk is applied when using the base-linux API. Should a generic
    application (that uses the base API only) call 'Trace::timestamp'
    directly, the illegal instruction is executed.
    
    Issue #4136


Pine-A64-LTS single board computer
==================================

; @nfeske

; refer to corresponding section of the previous release notes


RISC-V
======

; @ssumpf

commit 6223ae44133dda8395e21818d096cd7c5a6d1ea2
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Fri Mar 5 06:28:26 2021 +0100

    riscv: Interrupt controller support
    
    - Enable the "platform-level interrupt controller" PLIC on base-hw
    - The RISC-V specification offers only a register description, but no
      layout for the register set. This implies the layout is platform
      dependent, and therefore, implemented separately for Qemu
    
    issue #4042


Build system and tools
######################

Tool-chain update to GCC 10.03 and binutils 2.36
================================================

; @cproc

; What's new?
; Anecdotes
; Typical stumbling blocks?
; Current limitations? RISC-V?

commit 7fd598f0c1c82837d5ee02db3fe4a8b00abd4385
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Tue Apr 20 11:20:55 2021 +0200

    tool_chain: build 'gprbuild' from source
    
    The 'gprbuild' version which is provided by Ubuntu 18.04 has a bug
    which prevents it from building 'ali2dep' with gcc/gnat 10. With
    this commit, a newer 'gprbuild' version is built from source.
    
    Issue #4094

commit 6a11b78cdf746804bd8a150942bf87c400958f94
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Wed Mar 24 22:03:18 2021 +0100

    tool_chain: use gcc-provided dependency libraries
    
    Download gmp, mpc and mpfr with the download script provided by the
    gcc source tree and let the gcc build system handle the build of these
    libraries with the correct compile options. This fixes build issues on
    armhf Linux and removes the need to maintain mpc and mpfr ports in
    the Genode tree.
    
    Issue #4094

commit fc902d9e660aad3a2aadf256b1fa25ad898acb49
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Fri Mar 26 11:54:08 2021 +0100

    tool_chain: update binutils to version 2.36.1
    
    Issue #4094

commit 6639261126702aa1b91174fd95e48e4f4359a892
Author: Sebastian Sumpf <sebastian.sumpf@genode-labs.com>
Date:   Fri May 7 11:40:01 2021 +0200

    binutils: augment equally-named sections again
    
    Revert GNU ld to the old behavior where sections with the same name in multiple
    ld scripts are merged. Binutils 2.36.1 creates two sections with the same name.
    
    Fixes #4126

commit d0054ca378bad255cadeaa41f2dc21b2a139508a
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Mon Mar 29 19:36:20 2021 +0200

    tool_chain: update gcc to version 10.3.0
    
    Issue #4094

commit 7f452fd2be03a1ef4b2144c07e4a5ea2fffeae92
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Fri Apr 2 18:26:10 2021 +0200

    tool_chain: update ali2dep for gcc 10.3.0
    
    Issue #4094

commit 899358c76143591625c62e36ff45e3e8e6d2d6a7
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Mon Apr 5 03:09:56 2021 +0200

    stdcxx: update to version 10.3.0
    
    Issue #4094

commit c3e39c74d2b612fdaacbc88943b5ef9965ca4bf9
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Sat Apr 3 21:42:46 2021 +0200

    gcov: update to version 10.3.0
    
    Issue #4094

commit c9b6a9eceab8e479dbaee15213a53a4505268fa9
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Sun Apr 4 23:42:20 2021 +0200

    sanitizer: update to version 10.3.0
    
    Issue #4094

commit eeb8dbf044364d8e058d8e373a0069b918388a1d
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Fri Apr 23 14:30:26 2021 +0200

    Remove mpc and mpfr ports
    
    These ports are not needed anymore with the 21.05 tool chain update.
    
    Issue #4094

commit 34d27a21b37b1fce443f97fe5f21c661b2593dab
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Wed May 5 15:34:07 2021 +0200

    ports/ada-runtime: update to support gcc 10
    
    Fixes #4128

commit 97b66c2fd4a7a128461808b19939b7baf4baccb0
Author: Martin Stein <martin.stein@genode-labs.com>
Date:   Tue May 11 17:36:41 2021 +0200

    ports/libsparkcrypto: update for GCC 10
    
    The old port version contained '*.ali' files that were build with an older GCC
    which led to problems when compiling packages that use the port with the new
    GCC 10. The '*.ali' files of the new port version were generated with GCC 10.
    
    Fixes #4145

commit f28075a5c2bde2e39ccc1f86f76af730d61e8114
Author: Christian Prochaska <christian.prochaska@genode-labs.com>
Date:   Sun May 23 21:33:55 2021 +0200

    tool chain: update gdb to version 10.2
    
    Issue #4094


Utilities for porting Linux drivers
===================================

Dummy-function generator
------------------------

; @skalk

commit e9ef0e272663d2c3e409fff4023ec4e4635ff6cd
Author: Stefan Kalkowski <stefan.kalkowski@genode-labs.com>
Date:   Wed Mar 17 11:47:30 2021 +0100

    tool: simplify Linux dummy function generation
    
    The new tool `create_dummies` easily lists missing references,
    while porting subsystems of the Linux kernel to Genode, e.g., device drivers.
    Moreover it can automatically generate dummy implementations for functions
    and global variables.
    
    Fixes #4156


Device-tree source processing
-----------------------------

; @nfeske

commit 41d55effa78ece96066c0e793b1072e570dd9b1a
Author: Norman Feske <norman.feske@genode-labs.com>
Date:   Wed May 19 15:59:33 2021 +0200

    tool/dts: for extracting content from dts files
    
    The new tool eases the inspection and pruning of device-tree source
    files.
    
    Fixes #4165


Cache for downloaded ports
==========================

; @nfeske

commit de6258290571377ba1e2c6a934ff9cb15d51df0a
Author: Tomasz Gajewski <tomga@wp.pl>
Date:   Fri Feb 19 23:51:04 2021 +0100

    prepare_port: simple cache for downloads
    
    Fixes #4028


Common hook for custom build rules
==================================

; @nfeske

commit f3f8d9a6de32b44e20f6c9521f697cdad5ddcdba
Author: Tomasz Gajewski <tomga@wp.pl>
Date:   Thu Apr 1 00:31:39 2021 +0200

    build system: support for CUSTOM_TARGET_DEPS

